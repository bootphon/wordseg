before_script:
  # load the requested modules on oberon
  - module load anaconda/3

wordseg-build:
  stage: build
  artifacts:
    paths:
      - build
    when: on_success
    expire_in: 1 hour
  script:
    # create a Python virtual environment (if not existing)
    - conda env create --name wordseg-ci -f environment.yml 2> /dev/null || true
    - conda activate wordseg-ci
    # compile the project
    - make install

wordseg-test:
  stage: test
  dependencies:
  script:
    # run the unit tests within the CI environment
    - conda activate wordseg-ci
    - make test

wordseg-deploy:
  # install wordseg in the "wordseg" virtual environment on oberon
  # (users just have to type "source activate wordseg" to use it)
  stage: deploy
  only:
    refs:
      - master
  dependencies:
  script:
    # activate the production environment and (re)install wordseg in it
    - conda activate wordseg
    - cd /shared/apps/wordseg
    - git pull origin master
    - make clean
    - make install
    # test the production environment to be sure all is okay
    - make test

# documentation is available on https://docs.cognitive-ml.fr/wordseg
documentation:
  stage: deploy
  only:
    refs:
      - master
  dependencies:
    - wordseg-build
  script:
    - module load texlive/2018
    - conda activate wordseg-ci
    - make doc
    - scp -r build/doc/html/* cognitive-ml.fr:/var/www/docs.cognitive-ml.fr/wordseg
